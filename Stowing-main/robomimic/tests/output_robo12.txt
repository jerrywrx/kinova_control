running tests for bc...
bc: passed!
bc-gaussian: passed!
bc-gmm: passed!
bc-vae, N(0, 1) prior: passed!
bc-vae, Gaussian prior (obs-independent): passed!
bc-vae, Gaussian prior (obs-dependent): passed!
bc-vae, GMM prior (obs-independent, weights-fixed): passed!
bc-vae, GMM prior (obs-independent, weights-learned): passed!
bc-vae, GMM prior (obs-dependent, weights-fixed): passed!
bc-vae, GMM prior (obs-dependent, weights-learned): passed!
bc-vae, uniform categorical prior: passed!
bc-vae, categorical prior (obs-independent): passed!
bc-vae, categorical prior (obs-dependent): passed!
bc-rnn: passed!
bc-rnn-gmm: passed!
bc-rgb: passed!
bc-rgb-gaussian: passed!
bc-rgb-gmm: passed!
bc-rgb-vae, N(0, 1) prior: passed!
bc-rgb-vae, Gaussian prior (obs-independent): passed!
bc-rgb-vae, Gaussian prior (obs-dependent): passed!
bc-rgb-vae, GMM prior (obs-independent, weights-fixed): passed!
bc-rgb-vae, GMM prior (obs-independent, weights-learned): passed!
bc-rgb-vae, GMM prior (obs-dependent, weights-fixed): passed!
bc-rgb-vae, GMM prior (obs-dependent, weights-learned): passed!
bc-rgb-vae, uniform categorical prior: passed!
bc-rgb-vae, categorical prior (obs-independent): passed!
bc-rgb-vae, categorical prior (obs-dependent): passed!
bc-rgb-rnn: failed with error:
CUDA out of memory. Tried to allocate 182.00 MiB (GPU 0; 11.76 GiB total capacity; 574.11 MiB already allocated; 197.25 MiB free; 712.00 MiB reserved in total by PyTorch)

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 244, in test_run
    train(config, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/scripts/train.py", line 179, in train
    step_log = TrainUtils.run_epoch(model=model, data_loader=train_loader, epoch=epoch, num_steps=train_num_steps)
  File "/home/haonan/Projects/robomimic/robomimic/utils/train_utils.py", line 541, in run_epoch
    info = model.train_on_batch(input_batch, epoch, validate=validate)
  File "/home/haonan/Projects/robomimic/robomimic/algo/bc.py", line 118, in train_on_batch
    step_info = self._train_step(losses)
  File "/home/haonan/Projects/robomimic/robomimic/algo/bc.py", line 181, in _train_step
    policy_grad_norms = TorchUtils.backprop_for_loss(
  File "/home/haonan/Projects/robomimic/robomimic/utils/torch_utils.py", line 162, in backprop_for_loss
    loss.backward(retain_graph=retain_graph)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/tensor.py", line 245, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/autograd/__init__.py", line 145, in backward
    Variable._execution_engine.run_backward(
RuntimeError: CUDA out of memory. Tried to allocate 182.00 MiB (GPU 0; 11.76 GiB total capacity; 574.11 MiB already allocated; 197.25 MiB free; 712.00 MiB reserved in total by PyTorch)

bc-rgb-rnn-gmm: failed with error:
CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 11.76 GiB total capacity; 179.54 MiB already allocated; 90.94 MiB free; 722.00 MiB reserved in total by PyTorch)

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 244, in test_run
    train(config, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/scripts/train.py", line 179, in train
    step_log = TrainUtils.run_epoch(model=model, data_loader=train_loader, epoch=epoch, num_steps=train_num_steps)
  File "/home/haonan/Projects/robomimic/robomimic/utils/train_utils.py", line 541, in run_epoch
    info = model.train_on_batch(input_batch, epoch, validate=validate)
  File "/home/haonan/Projects/robomimic/robomimic/algo/bc.py", line 118, in train_on_batch
    step_info = self._train_step(losses)
  File "/home/haonan/Projects/robomimic/robomimic/algo/bc.py", line 181, in _train_step
    policy_grad_norms = TorchUtils.backprop_for_loss(
  File "/home/haonan/Projects/robomimic/robomimic/utils/torch_utils.py", line 176, in backprop_for_loss
    optim.step()
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/optim/optimizer.py", line 89, in wrapper
    return func(*args, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/optim/adam.py", line 91, in step
    state['exp_avg_sq'] = torch.zeros_like(p, memory_format=torch.preserve_format)
RuntimeError: CUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 11.76 GiB total capacity; 179.54 MiB already allocated; 90.94 MiB free; 722.00 MiB reserved in total by PyTorch)

bc-image-crop: passed!
running tests for hbc...
hbc: failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, N(0, 1) prior: failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, Gaussian prior (obs-independent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, Gaussian prior (obs-dependent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, GMM prior (obs-independent, weights-fixed): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, GMM prior (obs-independent, weights-learned): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, GMM prior (obs-dependent, weights-fixed): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, GMM prior (obs-dependent, weights-learned): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, uniform categorical prior: failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, categorical prior (obs-independent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

hbc-vae, categorical prior (obs-dependent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

running tests for iris...
iris: failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae Gaussian prior (obs-independent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae Gaussian prior (obs-dependent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae GMM prior (obs-independent, weights-fixed): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae GMM prior (obs-independent, weights-learned): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae GMM prior (obs-dependent, weights-fixed): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae GMM prior (obs-dependent, weights-learned): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae uniform categorical prior: failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae categorical prior (obs-independent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, planner vae categorical prior (obs-dependent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq gmm: failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq distributional: failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE Gaussian prior (obs-independent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE Gaussian prior (obs-dependent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE GMM prior (obs-independent, weights-fixed): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE GMM prior (obs-independent, weights-learned): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE GMM prior (obs-dependent, weights-fixed): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE GMM prior (obs-dependent, weights-learned): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE uniform categorical prior: failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE categorical prior (obs-independent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

iris, bcq cVAE categorical prior (obs-dependent): failed with error:
'modalities'

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 248, in test_run
    test_eval_agent_from_checkpoint(ckpt_path, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 204, in test_eval_agent_from_checkpoint
    policy, ckpt_dict = FileUtils.policy_from_checkpoint(ckpt_path=ckpt_path, device=device, verbose=True)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 340, in policy_from_checkpoint
    config, _ = config_from_checkpoint(algo_name=algo_name, ckpt_dict=ckpt_dict, verbose=verbose)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 300, in config_from_checkpoint
    update_config(cfg=config_dict)
  File "/home/haonan/Projects/robomimic/robomimic/utils/file_utils.py", line 212, in update_config
    modalities = cfg["observation"]["modalities"]
KeyError: 'modalities'

running tests for bcq...
bcq-no-actor: passed!
bcq-distributional: passed!
bcq-as-gmm: passed!
bcq-as-vae, N(0, 1) prior: passed!
bcq-as-vae, Gaussian prior (obs-independent): passed!
bcq-as-vae, Gaussian prior (obs-dependent): passed!
bcq-as-vae, GMM prior (obs-independent, weights-fixed): passed!
bcq-as-vae, GMM prior (obs-independent, weights-learned): passed!
bcq-as-vae, GMM prior (obs-dependent, weights-fixed): passed!
bcq-as-vae, GMM prior (obs-dependent, weights-learned): passed!
bcq-as-vae, uniform categorical prior: passed!
bcq-as-vae, categorical prior (obs-independent): passed!
bcq-as-vae, categorical prior (obs-dependent): passed!
bcq-rgb-no-actor: passed!
bcq-rgb-distributional: passed!
bcq-rgb-as-gmm: passed!
bcq-rgb-as-vae, N(0, 1) prior: passed!
bcq-rgb-as-vae, Gaussian prior (obs-independent): passed!
bcq-rgb-as-vae, Gaussian prior (obs-dependent): passed!
bcq-rgb-as-vae, GMM prior (obs-independent, weights-fixed): passed!
bcq-rgb-as-vae, GMM prior (obs-independent, weights-learned): passed!
bcq-rgb-as-vae, GMM prior (obs-dependent, weights-fixed): passed!
bcq-rgb-as-vae, GMM prior (obs-dependent, weights-learned): passed!
bcq-rgb-as-vae, uniform categorical prior: passed!
bcq-rgb-as-vae, categorical prior (obs-independent): passed!
bcq-rgb-as-vae, categorical prior (obs-dependent): passed!
bcq-image-crop: passed!
running tests for cql...
/home/haonan/py38/lib/python3.8/site-packages/torch/distributions/distribution.py:44: UserWarning: <class 'robomimic.models.distributions.TanhWrappedDistribution'> does not define `arg_constraints`. Please set `arg_constraints = {}` or initialize the distribution with `validate_args=False` to turn off validation.
  warnings.warn(f'{self.__class__} does not define `arg_constraints`. ' +
cql-fixed-entropy: passed!
cql-fixed-q-gap: passed!
cql-fixed-gaussian: passed!
cql-rgb-fixed-entropy: failed with error:
CUDA out of memory. Tried to allocate 70.00 MiB (GPU 0; 11.76 GiB total capacity; 4.87 GiB already allocated; 153.50 MiB free; 4.94 GiB reserved in total by PyTorch)

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 244, in test_run
    train(config, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/scripts/train.py", line 179, in train
    step_log = TrainUtils.run_epoch(model=model, data_loader=train_loader, epoch=epoch, num_steps=train_num_steps)
  File "/home/haonan/Projects/robomimic/robomimic/utils/train_utils.py", line 541, in run_epoch
    info = model.train_on_batch(input_batch, epoch, validate=validate)
  File "/home/haonan/Projects/robomimic/robomimic/algo/cql.py", line 239, in train_on_batch
    critic_info = self._train_critic_on_batch(batch, epoch, validate)
  File "/home/haonan/Projects/robomimic/robomimic/algo/cql.py", line 432, in _train_critic_on_batch
    q_next = self._get_qs_from_actions(obs_dict=batch["obs"], actions=cql_next_actions.permute(1, 0, 2), goal_dict=batch["goal_obs"], q_net=critic)
  File "/home/haonan/Projects/robomimic/robomimic/algo/cql.py", line 533, in _get_qs_from_actions
    qs = q_net(obs_dict=obs_dict_stacked, acts=actions.reshape(-1, D), goal_dict=goal_dict_stacked)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/Projects/robomimic/robomimic/models/value_nets.py", line 197, in forward
    return super(ActionValueNetwork, self).forward(inputs, goal_dict)
  File "/home/haonan/Projects/robomimic/robomimic/models/value_nets.py", line 120, in forward
    values = super(ValueNetwork, self).forward(obs=obs_dict, goal=goal_dict)["value"]
  File "/home/haonan/Projects/robomimic/robomimic/models/obs_nets.py", line 582, in forward
    enc_outputs = self.nets["encoder"](**inputs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/Projects/robomimic/robomimic/models/obs_nets.py", line 443, in forward
    self.nets[obs_group].forward(inputs[obs_group])
  File "/home/haonan/Projects/robomimic/robomimic/models/obs_nets.py", line 233, in forward
    x = self.obs_nets[k](x)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/Projects/robomimic/robomimic/models/base_nets.py", line 1054, in forward
    return super(VisualCore, self).forward(inputs)
  File "/home/haonan/Projects/robomimic/robomimic/models/base_nets.py", line 440, in forward
    x = self.nets(inputs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/Projects/robomimic/robomimic/models/base_nets.py", line 440, in forward
    x = self.nets(inputs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 135, in forward
    return F.batch_norm(
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/functional.py", line 2149, in batch_norm
    return torch.batch_norm(
RuntimeError: CUDA out of memory. Tried to allocate 70.00 MiB (GPU 0; 11.76 GiB total capacity; 4.87 GiB already allocated; 153.50 MiB free; 4.94 GiB reserved in total by PyTorch)

cql-rgb-fixed-q-gap: passed!
cql-rgb-fixed-gaussian: failed with error:
CUDA out of memory. Tried to allocate 36.00 MiB (GPU 0; 11.76 GiB total capacity; 4.96 GiB already allocated; 120.38 MiB free; 5.04 GiB reserved in total by PyTorch)

Traceback (most recent call last):
  File "/home/haonan/Projects/robomimic/robomimic/utils/test_utils.py", line 244, in test_run
    train(config, device=device)
  File "/home/haonan/Projects/robomimic/robomimic/scripts/train.py", line 179, in train
    step_log = TrainUtils.run_epoch(model=model, data_loader=train_loader, epoch=epoch, num_steps=train_num_steps)
  File "/home/haonan/Projects/robomimic/robomimic/utils/train_utils.py", line 541, in run_epoch
    info = model.train_on_batch(input_batch, epoch, validate=validate)
  File "/home/haonan/Projects/robomimic/robomimic/algo/cql.py", line 239, in train_on_batch
    critic_info = self._train_critic_on_batch(batch, epoch, validate)
  File "/home/haonan/Projects/robomimic/robomimic/algo/cql.py", line 432, in _train_critic_on_batch
    q_next = self._get_qs_from_actions(obs_dict=batch["obs"], actions=cql_next_actions.permute(1, 0, 2), goal_dict=batch["goal_obs"], q_net=critic)
  File "/home/haonan/Projects/robomimic/robomimic/algo/cql.py", line 533, in _get_qs_from_actions
    qs = q_net(obs_dict=obs_dict_stacked, acts=actions.reshape(-1, D), goal_dict=goal_dict_stacked)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/Projects/robomimic/robomimic/models/value_nets.py", line 197, in forward
    return super(ActionValueNetwork, self).forward(inputs, goal_dict)
  File "/home/haonan/Projects/robomimic/robomimic/models/value_nets.py", line 120, in forward
    values = super(ValueNetwork, self).forward(obs=obs_dict, goal=goal_dict)["value"]
  File "/home/haonan/Projects/robomimic/robomimic/models/obs_nets.py", line 582, in forward
    enc_outputs = self.nets["encoder"](**inputs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/Projects/robomimic/robomimic/models/obs_nets.py", line 443, in forward
    self.nets[obs_group].forward(inputs[obs_group])
  File "/home/haonan/Projects/robomimic/robomimic/models/obs_nets.py", line 233, in forward
    x = self.obs_nets[k](x)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/Projects/robomimic/robomimic/models/base_nets.py", line 1054, in forward
    return super(VisualCore, self).forward(inputs)
  File "/home/haonan/Projects/robomimic/robomimic/models/base_nets.py", line 440, in forward
    x = self.nets(inputs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/Projects/robomimic/robomimic/models/base_nets.py", line 440, in forward
    x = self.nets(inputs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/modules/pooling.py", line 162, in forward
    return F.max_pool2d(input, self.kernel_size, self.stride,
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/_jit_internal.py", line 365, in fn
    return if_false(*args, **kwargs)
  File "/home/haonan/py38/lib/python3.8/site-packages/torch/nn/functional.py", line 659, in _max_pool2d
    return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)
RuntimeError: CUDA out of memory. Tried to allocate 36.00 MiB (GPU 0; 11.76 GiB total capacity; 4.96 GiB already allocated; 120.38 MiB free; 5.04 GiB reserved in total by PyTorch)

cql-image-crop: passed!
running tests for scripts...
playback-script: passed!
playback-script-action_playback: passed!
WARNING:imageio_ffmpeg:IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (168, 84) to (176, 96) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5b12840] Warning: data is not aligned! This can lead to a speed loss
playback-script-obs: passed!
run-agent-script: passed!
running tests for examples...
simple-config-example: passed
simple-obs-nets-example: passed
simple-train-loop-example: passed
train-bc-rnn-example: passed